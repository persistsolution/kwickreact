name: Deploy React App with Docker

on:
  push:
    branches:
      - main
      - dev
      - test
      - stag

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    # Step 3: Install Dependencies and Build App
    - name: Install Dependencies and Build App
      run: |
        npm install
        npm run build

    # Step 4: Build Docker Image
    - name: Build Docker Image
      env:
        BRANCH: ${{ github.ref_name }}
      run: |
        docker build -t my-react-app:${{ github.ref_name }} .

    # Step 5: Log in to Docker Hub (or container registry)
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 6: Push Docker Image
    - name: Push Docker Image
      env:
        BRANCH: ${{ github.ref_name }}
      run: |
        docker tag my-react-app:${{ github.ref_name }} ${{ secrets.DOCKER_USERNAME }}/my-react-app:${{ github.ref_name }}
        docker push ${{ secrets.DOCKER_USERNAME }}/my-react-app:${{ github.ref_name }}

    # Step 7: Deploy to EC2
    - name: Deploy Docker Container to EC2
      env:
        BRANCH: ${{ github.ref_name }}
        EC2_USER: ubuntu
        EC2_HOST: ${{ secrets.EC2_HOST }}
        PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
      run: |
        # Write the private key to a temporary file
        echo "$PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem

        # Ensure the .ssh directory exists
        mkdir -p ~/.ssh

        # Add EC2 host to known_hosts to avoid host key verification failure
        ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts

        # Install Docker if not present, log in, and deploy
        ssh -i private_key.pem $EC2_USER@$EC2_HOST << EOF
          # Install Docker if not already installed
          if ! command -v docker &> /dev/null; then
            echo "Docker not found. Installing Docker..."
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker
          fi

          # Add user to Docker group to avoid permission issues
          sudo usermod -aG docker $USER

          # Refresh the group permissions and execute Docker commands
          newgrp docker <<DOCKER_COMMANDS
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-react-app:${{ github.ref_name }}
            docker stop my-react-app-${{ github.ref_name }} || true
            docker rm my-react-app-${{ github.ref_name }} || true
            docker run -d --name my-react-app-${{ github.ref_name }} -p \$(case "${{ github.ref_name }}" in
              main) echo 5173 ;;
              dev) echo 5174 ;;
              test) echo 5175 ;;
              stag) echo 5176 ;;
            esac):80 ${{ secrets.DOCKER_USERNAME }}/my-react-app:${{ github.ref_name }}
          DOCKER_COMMANDS
        EOF

        # Cleanup the private key
        rm private_key.pem
